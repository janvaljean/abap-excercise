*&---------------------------------------------------------------------*
*& Report ZSF_OO_ALV_TEST_002_EVENTS
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zsf_oo_alv_test_002_events.

TYPES: BEGIN OF stu_mara,
         matnr   TYPE matnr,
         mtart   TYPE mtart,
         ntgew   TYPE ntgew,
         mat_grp TYPE matkl,
       END OF stu_mara.

DATA: it_alv TYPE lvc_t_fcat,
      wa_alv TYPE LINE OF lvc_t_fcat.

DATA:it_mara TYPE TABLE OF stu_mara.

DATA: wa_exclude TYPE LINE OF ui_functions,
      it_exclude TYPE ui_functions.

DATA(obj_ccont) = NEW cl_gui_custom_container( container_name = 'CUSTCONT' ).

*step2 create a ref for cl_gui_alv_grid

DATA(obj_alv) = NEW cl_gui_alv_grid( i_parent = obj_ccont ).

CLASS lc_alv DEFINITION.
  PUBLIC SECTION.

    METHODS:evt_doubleclick FOR EVENT double_click OF cl_gui_alv_grid IMPORTING e_row e_column.
    METHODS:evt_onf4help FOR EVENT onf4 OF cl_gui_alv_grid IMPORTING es_row_no .
    METHODS:evt_cust_toolbar FOR EVENT toolbar OF cl_gui_alv_grid  IMPORTING e_object.
    METHODS:evt_zcommand FOR EVENT user_command OF cl_gui_alv_grid  IMPORTING e_ucomm.

ENDCLASS.

CLASS lc_alv IMPLEMENTATION.
  METHOD evt_doubleclick.



  ENDMETHOD.

  METHOD evt_onf4help.
    TYPES:BEGIN OF stu_mtart,
            mtart TYPE mtart,
            mtbez TYPE mtbez,
          END OF stu_mtart.

    DATA: it_mtart    TYPE TABLE OF stu_mtart,
          it_return   TYPE TABLE OF ddshretval,
          it_f4fields TYPE TABLE OF dselc.

    DATA: wa_f4fields TYPE dselc.

    SELECT mtart mtbez FROM t134t INTO TABLE it_mtart UP TO 10 ROWS WHERE spras = 'E'.
    CLEAR it_f4fields.

    wa_f4fields-dyfldname = 'MTART'.
    wa_f4fields-fldname = 'F0001'.

    APPEND wa_f4fields TO it_f4fields.
    CLEAR wa_f4fields.

    CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
      EXPORTING
*
        retfield        = 'MTART'                 " Name des Rückgabefeldes in FIELD_TAB
        value_org       = 'S'              " Werteübergabe: C: zellenweise, S: strukturiert
      TABLES
        value_tab       = it_mtart                " Tabelle der Werte; Einträge zellenweise
        return_tab      = it_return                " Rückgabe der ausgewählten Werte
        dynpfld_mapping = it_f4fields                " Zuordnung der Dynprofelder zur int. Tabelle
      EXCEPTIONS
        parameter_error = 1                " Fehlerhafte Parameter
        no_values_found = 2                " Es wurden keine Werte gefunden
        OTHERS          = 3.
    IF sy-subrc <> 0.
*       MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    READ TABLE it_mara ASSIGNING FIELD-SYMBOL(<fs_mara>) INDEX es_row_no-row_id.
    IF sy-subrc EQ 0.
      READ TABLE it_return INTO DATA(wa_return) WITH KEY fieldname = 'F0001'.
      IF sy-subrc EQ 0.
        <fs_mara>-mtart = wa_return-fieldval.

      ENDIF.

    ENDIF.
    CALL METHOD obj_alv->refresh_table_display
      EXPORTING
*       is_stable      =
        i_soft_refresh = 'X'
*  EXCEPTIONS
*       finished       = 1
*       others         = 2
      .
    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.

  ENDMETHOD.

  METHOD evt_cust_toolbar.


    DATA: wa_cust_buttonns TYPE stb_button.

    wa_cust_buttonns-butn_type = 0.
    wa_cust_buttonns-function = 'EXIT'.
    wa_cust_buttonns-text = 'Close'.

    APPEND wa_cust_buttonns TO e_object->mt_toolbar.


  ENDMETHOD.


  METHOD evt_zcommand.

    IF e_ucomm = 'EXIT'.
      BREAK-POINT.
    ENDIF.
  ENDMETHOD.
ENDCLASS.

START-OF-SELECTION.

**step1 creat a obj






  CALL SCREEN 200.

*&---------------------------------------------------------------------*
*& Module STATUS_0200 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS 'MENU'.
* SET TITLEBAR 'xxx'.
*dropdown
  DATA: it_listvalues TYPE  TABLE OF LVC_S_DROP,
         wa_listvalues TYPE  LVC_S_DROP.

  CLEAR it_listvalues.
  wa_listvalues-handle = '100'.
  wa_listvalues-value = 'MG1'.
  APPEND wa_listvalues TO it_listvalues.
  CLEAR wa_listvalues.


  wa_listvalues-handle = '100'.
  wa_listvalues-value = 'MG2'.
  APPEND wa_listvalues TO it_listvalues.
  CLEAR wa_listvalues.




  SELECT matnr mtart ntgew FROM mara INTO TABLE it_mara UP TO 10 ROWS.

  PERFORM fill_catalog.


* step3 call method

*   events double click

  DATA(obj_alv_locclass) = NEW lc_alv( ).

  SET HANDLER obj_alv_locclass->evt_doubleclick FOR obj_alv.

*    search help


  DATA: it_f4fields TYPE lvc_t_f4,
        wa_f4fields TYPE LINE OF lvc_t_f4.

  CLEAR it_f4fields.

  wa_f4fields-fieldname = 'MTART'.
  wa_f4fields-register = 'X'.
  APPEND wa_f4fields TO it_f4fields.
  CLEAR wa_f4fields.

  obj_alv->register_f4_for_fields( it_f4 = it_f4fields ).
*
  SET HANDLER obj_alv_locclass->evt_onf4help FOR obj_alv.
*toolbar register
  SET HANDLER obj_alv_locclass->evt_cust_toolbar FOR obj_alv.
*  syuccomm event
  SET HANDLER obj_alv_locclass->evt_zcommand FOR obj_alv.
*  dropdowm

    CALL METHOD obj_alv->set_drop_down_table
   EXPORTING
      it_drop_down       = it_listvalues
.
*  display
  obj_alv->set_table_for_first_display(

    EXPORTING
*      i_structure_name              = 'MARA'
      it_toolbar_excluding = it_exclude          " Strukturname der internen Ausgabetabelle

    CHANGING
      it_outtab                     = it_mara         " Ausgabetabelle
     it_fieldcatalog               =  it_alv                " Feldkatalog
*     it_sort                       =                  " Sortierkriterien
*     it_filter                     =                  " Filterkriterien
 ).

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.
  DATA okcode_200 TYPE sy-ucomm.

  IF okcode_200 = 'EXIT'.
    LEAVE PROGRAM.

  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Form FILL_CATALOG
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM fill_catalog .

*    filll fieldcatalog
  wa_alv-row_pos = '1'.
  wa_alv-col_pos = '1'.
  wa_alv-fieldname = 'MATNR'.
  wa_alv-tabname = 'IT_MARA'.
  wa_alv-outputlen = 20.
  wa_alv-scrtext_m = 'Material'.

  APPEND wa_alv TO it_alv.
  CLEAR wa_alv.

  wa_alv-row_pos = '1'.
  wa_alv-col_pos = '2'.
  wa_alv-fieldname = 'MTART'.
  wa_alv-tabname = 'IT_MARA'.
  wa_alv-edit = 'X'.
  wa_alv-f4availabl = 'X'.
*  wa_alv-ref_field = 'MTART'.
*  wa_alv-ref_table = 'MARA'.
  wa_alv-outputlen = 20.
  wa_alv-scrtext_m = 'Material Type'.

  APPEND wa_alv TO it_alv.
  CLEAR wa_alv.

  wa_alv-row_pos = '1'.
  wa_alv-col_pos = '3'.
  wa_alv-fieldname = 'NTGEW'.
  wa_alv-tabname = 'IT_MARA'.
  wa_alv-outputlen = 20.
  wa_alv-scrtext_m = 'Mat Net Weight'.
  wa_alv-edit = 'X'.

  APPEND wa_alv TO it_alv.
  CLEAR wa_alv.
  wa_alv-row_pos = '1'.
  wa_alv-col_pos = '4'.
  wa_alv-fieldname = 'MAT_GRP'.
  wa_alv-tabname = 'IT_MARA'.
  wa_alv-outputlen = 10.
  wa_alv-drdn_hndl = '100'.
  wa_alv-scrtext_m = 'MatGroup'.
  wa_alv-edit = 'X'.

  APPEND wa_alv TO it_alv.
  CLEAR wa_alv.


  wa_exclude = cl_gui_alv_grid=>mc_fc_print.
  APPEND wa_exclude TO it_exclude.
  wa_exclude = cl_gui_alv_grid=>mc_fc_subtot.
  APPEND wa_exclude TO it_exclude.
ENDFORM.
