ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§cds partðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§
ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§fashion cdsðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§
namespace app.fashionShop;
using { Currency } from '@sap/cds/common';

type  Flag : String(1);

entity Sections  {
    key id : UUID;
    name : String(16);
    description : String(64);
    
}

entity Fashion_Types  {
    key id : UUID;
    section : Association to Sections;
    typename : String(16);
    description : String(64);
    
}
entity Fashion_Items  {
    key id : UUID;
    fashionType : Association to Fashion_Types;
    itemname : String(16);
    brand : String(16);
    size : String(8);
    material : String(16);
    price : String(10);
    currency : Currency;
    isAvailable : Flag;
}
view YC_FashionShop as select from Fashion_Items as fItem{
    fItem.fashionType.section.id as sectionId,
    fItem.fashionType.section.name as sectionName,
    fItem.fashionType.section.description as sectionDesc,
    fItem.fashionType.id as fashionTypeId,
    fItem.fashionType.typename as fashionTypeName,
    fItem.fashionType.description as fashionTypeDesc,
    fItem.id as fashinItemId,
    fItem.itemname as fashionItemName,
    fItem.brand as brand,
    fItem.size as size,
    fItem.material as material,
    fItem.price as price,
    fItem.currency as currency,
    //fItem.isAvailable as isAvailable,
    concat( fItem.brand, concat( ' ', fItem.itemname )) as itemDetails : String(32),
    case
        when fItem.price >= 500 then 'Premium' 
        when fItem.price >= 100  and fItem.price < 500 then 'Mid-Range' 
        else 'Low-Range'
    end as priseRange : String(10) 


}where fItem.isAvailable = 'X' ;

ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§cds partðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§cds partðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§
ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§srv partðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§srv partðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§

using app.fashionShop from '../db/fashionShop';

service fashionShop_Service {

    entity Sections as projection on fashionShop.Sections;
    entity Fashion_Types as projection on fashionShop.Fashion_Types;
    entity Fashion_Items as projection on fashionShop.Fashion_Items;
    
    entity Srv_FashionShop as projection on fashionShop.YC_FashionShop;

}


ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§ðŸ§§//Field name and fields values
annotate fashionShop.Fashion_Items with @(UI: {
    HeaderInfo : {
        $Type : 'UI.HeaderInfoType',
        TypeName: 'Online Fashion Shop',
        TypeNamePlural: 'Online Fashion Shop',
        Title : {Value : itemname},
        Description : {Value : 'Online Fashion Shop'}
    },

    
    LineItem : [
        {Value : fashionType.section.name},
        {Value : fashionType.typename},
        {Value : itemname},
        {Value : brand},
        {Value : size},
        {Value : price},
        {Value : currency_code}        
    ],

    Facets : [ {
        $Type : 'UI.CollectionFacet',
        Label : 'Fashion Details',
        Facets : [ {
            $Type : 'UI.ReferenceFacet',
            Target: '@UI.FieldGroup#ItemDetails',
        }],
    }
    ],

    FieldGroup #ItemDetails : {Data : [
        {Value : fashionType_id},
        {Value : fashionType.typename},
        {Value : itemname},
        {Value : size},
        {Value : price}
    ]    
    },


});
